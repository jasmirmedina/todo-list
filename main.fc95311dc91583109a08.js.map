{"version":3,"file":"main.fc95311dc91583109a08.js","mappings":"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","sources":["webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/global","webpack://todo-list/webpack/runtime/publicPath","webpack://todo-list/./src/scripts/projects.js","webpack://todo-list/./src/scripts/Project.js","webpack://todo-list/./src/scripts/Task.js","webpack://todo-list/./src/scripts/utils.js","webpack://todo-list/./src/scripts/initial.js","webpack://todo-list/./src/scripts/update-current-project-name.js","webpack://todo-list/./src/scripts/render.js","webpack://todo-list/./src/scripts/handle-dates.js","webpack://todo-list/./src/scripts/add-project.js","webpack://todo-list/./src/scripts/add-task.js","webpack://todo-list/./src/scripts/handle-dialog.js","webpack://todo-list/./src/scripts/handle-sidebar.js","webpack://todo-list/./src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const projects = [];\n\nexport default projects;\n","export default class Project {\n  constructor(name) {\n    this.name = name;\n    this.tasks = [];\n    this.isSelected = false;\n    this.isDefault = false;\n  }\n}\n","export default class Task {\n  constructor(title) {\n    this.title = title;\n    this.complete = false;\n  }\n\n  toggleComplete() {\n    this.complete = !this.complete;\n  }\n}\n","const $ = (e) => document.querySelector(e);\n\nconst cleanCtn = (ctn) => {\n  while (ctn.firstChild) {\n    ctn.removeChild(ctn.firstChild);\n  }\n};\n\nconst cleanInput = (input) => {\n  input.value = \"\";\n};\n\nconst checkLocalStorage = (item) => localStorage.getItem(item) === null;\n\nconst saveToLocalStorage = (item) => {\n  localStorage.setItem(\"projects\", JSON.stringify(item));\n};\n\nconst getFromLocalStorage = (item) => {\n  return JSON.parse(localStorage.getItem(item));\n};\n\nconst createElement = (tag, ...args) => {\n  const el = document.createElement(tag);\n\n  const [className, textContent, type] = args;\n\n  if (className) el.classList.add(className);\n  if (textContent) el.textContent = textContent;\n  if (type) el.type = type;\n\n  return el;\n};\n\nexport {\n  $,\n  cleanCtn,\n  cleanInput,\n  checkLocalStorage,\n  createElement,\n  saveToLocalStorage,\n  getFromLocalStorage,\n};\n","import projects from \"./projects\";\n\nimport Project from \"./Project\";\nimport Task from \"./Task\";\n\nimport { checkLocalStorage, getFromLocalStorage } from \"./utils\";\n\nconst initial = () => {\n  if (checkLocalStorage(\"projects\")) {\n    const defaultProject = new Project(\"Default\");\n    const defaultTask = new Task(\"Default\", 0);\n\n    defaultProject.isDefault = true;\n    defaultProject.isSelected = true;\n\n    defaultProject.tasks.push(defaultTask);\n\n    projects.push(defaultProject);\n  } else {\n    const lProjects = getFromLocalStorage(\"projects\");\n\n    lProjects.forEach((projectData) => {\n      const project = new Project(projectData.name);\n\n      project.isSelected = projectData.isSelected;\n      project.isDefault = projectData.isDefault;\n\n      projectData.tasks.forEach((taskData) => {\n        const task = new Task(taskData.title);\n        task.complete = taskData.complete;\n        project.tasks.push(task);\n      });\n\n      projects.push(project);\n    });\n  }\n};\n\nexport default initial;\n","import projects from \"./projects\";\n\nimport { $ } from \"./utils\";\n\nconst updateCurrentProjectName = () => {\n  const actualProjectName = $(\".main__actual-project-name\");\n\n  projects.forEach((element) => {\n    if (element.isSelected) {\n      actualProjectName.textContent = element.name;\n    }\n  });\n};\n\nexport default updateCurrentProjectName;\n","import projects from \"./projects\";\nimport updateCurrentProjectName from \"./update-current-project-name\";\n\nimport { $, createElement, cleanCtn } from \"./utils\";\n\nimport { saveToLocalStorage } from \"./utils\";\n\nconst sidebarProjects = $(\".sidebar__projects\");\nconst mainTasks = $(\".main__tasks-ctn\");\n\nconst deselectAllProjects = () => {\n  projects.forEach((project) => {\n    project.isSelected = false;\n  });\n};\n\nconst updateProjectSelection = (index) => {\n  deselectAllProjects();\n  projects[index].isSelected = true;\n  render();\n};\n\nconst deleteProject = (index) => {\n  projects.splice(index, 1);\n  updateProjectSelection(0);\n};\n\nconst deleteTask = (projectIndex, taskIndex) => {\n  projects[projectIndex].tasks.splice(taskIndex, 1);\n  render();\n};\n\nconst deleteCompletedTasks = (projectIndex) => {\n  const project = projects[projectIndex];\n  project.tasks = project.tasks.filter((task) => !task.complete);\n  render();\n};\n\nconst deleteAllTasks = (projectIndex) => {\n  const project = projects[projectIndex];\n  project.tasks = [];\n  render();\n};\n\nconst createProjectElement = (project, index) => {\n  const sidebarProjectDiv = createElement(\"div\", \"sidebar__project\");\n  const sidebarProjectP = createElement(\"p\", \"sidebar__project-name\");\n\n  const sidebarProjectSpan = createElement(\n    \"span\",\n    \"sidebar__delete-project-btn\",\n  );\n\n  if (!project.isDefault) {\n    sidebarProjectSpan.textContent = \"X\";\n  }\n\n  if (project.isSelected) {\n    sidebarProjectDiv.style.backgroundColor = \"rgba(41, 41, 41, 0.4)\";\n  }\n\n  sidebarProjectDiv.addEventListener(\n    \"click\",\n    () => updateProjectSelection(index),\n    updateCurrentProjectName(),\n  );\n\n  sidebarProjectSpan.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    deleteProject(index);\n  });\n\n  sidebarProjectP.textContent = project.name;\n  sidebarProjectDiv.append(sidebarProjectP, sidebarProjectSpan);\n\n  return sidebarProjectDiv;\n};\n\nconst renderTasks = () => {\n  projects.forEach((project, projectIndex) => {\n    if (project.isSelected) {\n      project.tasks.forEach((task, taskIndex) => {\n        const mainTaskDiv = createElement(\"div\", \"main__task\");\n        const mainTaskInnerDiv = createElement(\"div\");\n        const mainTaskCheckComplete = createElement(\n          \"input\",\n          \"\",\n          \"\",\n          \"checkbox\",\n        );\n\n        const mainTaksTitleP = createElement(\"p\", \"main__task-title\");\n\n        const mainDeleteTaskBtn = createElement(\n          \"span\",\n          \"main__delete-task-btn\",\n        );\n\n        mainDeleteTaskBtn.textContent = \"X\";\n\n        mainTaksTitleP.textContent = task.title;\n\n        mainTaskCheckComplete.checked = task.complete;\n        mainTaskCheckComplete.addEventListener(\"click\", () => {\n          task.toggleComplete();\n          render();\n        });\n\n        mainDeleteTaskBtn.addEventListener(\"click\", (event) => {\n          event.stopPropagation();\n          deleteTask(projectIndex, taskIndex);\n        });\n\n        if (task.complete) {\n          mainTaskDiv.style.opacity = \"0.5\";\n        }\n\n        mainTaskInnerDiv.append(mainTaskCheckComplete, mainTaksTitleP);\n        mainTaskDiv.append(mainTaskInnerDiv, mainDeleteTaskBtn);\n        mainTasks.appendChild(mainTaskDiv);\n      });\n    }\n  });\n};\n\nconst render = () => {\n  cleanCtn(sidebarProjects);\n  cleanCtn(mainTasks);\n\n  projects.forEach((project, index) => {\n    sidebarProjects.appendChild(createProjectElement(project, index));\n  });\n\n  renderTasks();\n\n  saveToLocalStorage(projects);\n};\n\nconst addEventListeners = () => {\n  const deleteCompletedBtn = $(\".main__dc-task-btn\");\n  const deleteAllBtn = $(\".main__da-task-btn\");\n\n  deleteCompletedBtn.addEventListener(\"click\", () => {\n    const selectedProject = projects.find((project) => project.isSelected);\n    if (selectedProject) {\n      deleteCompletedTasks(projects.indexOf(selectedProject));\n    }\n  });\n\n  deleteAllBtn.addEventListener(\"click\", () => {\n    const selectedProject = projects.find((project) => project.isSelected);\n    if (selectedProject) {\n      deleteAllTasks(projects.indexOf(selectedProject));\n    }\n  });\n};\n\naddEventListeners();\n\nexport default render;\n","import { $ } from \"./utils\";\n\nconst getCurrentDates = () => {\n  const date = new Date();\n\n  const dateOptions = {\n    locale: \"en-US\",\n    dayOptions: { weekday: \"long\" },\n    fullDateOptions: { month: \"long\", day: \"numeric\", year: \"numeric\" },\n  };\n\n  const currentDay = date.toLocaleDateString(\n    dateOptions.locale,\n    dateOptions.dayOptions,\n  );\n\n  const currentFullDate = date.toLocaleDateString(\n    dateOptions.locale,\n    dateOptions.fullDateOptions,\n  );\n\n  return { currentDay, currentFullDate };\n};\n\nconst handleDates = () => {\n  const actualDates = getCurrentDates();\n\n  const currentDay = $(\".sidebar__header-actual-day\");\n  const currentFullDate = $(\".sidebar__header-actual-date\");\n\n  currentDay.textContent = actualDates.currentDay;\n  currentFullDate.textContent = actualDates.currentFullDate;\n};\n\nexport default handleDates;\n","import Project from \"./Project\";\nimport projects from \"./projects\";\n\nconst formatProjectName = (projectName) => {\n  return (\n    projectName.trim().charAt(0).toUpperCase() +\n    projectName.trim().slice(1).toLowerCase()\n  );\n};\n\nconst addProject = (projectName) => {\n  if (projectName) {\n    const pName = formatProjectName(projectName);\n    const newProject = new Project(pName);\n\n    projects.push(newProject);\n\n    return true;\n  }\n};\n\nexport default addProject;\n","import Task from \"./Task\";\nimport projects from \"./projects\";\n\nconst addTask = (taskName, priority) => {\n  const newTask = new Task(taskName, priority);\n\n  projects.forEach((element, index) => {\n    if (element.isSelected) {\n      projects[index].tasks.push(newTask);\n    }\n  });\n};\n\nexport default addTask;\n","import addProject from \"./add-project\";\nimport addTask from \"./add-task\";\nimport render from \"./render\";\n\nimport { $, cleanInput } from \"./utils\";\n\nconst projectsDialog = $(\".projects-dialog\");\nconst sidebarAddProjectBtn = $(\".sidebar__add-project-btn\");\nconst cancelProjectBtn = $(\".projects-dialog__cancel-project-btn\");\nconst addProjectBtn = $(\".projects-dialog__add-project-btn\");\nconst projectName = $(\"#project-name\");\n\nconst tasksDialog = $(\".tasks-dialog\");\nconst mainAddTaskBtn = $(\".main__add-task-btn\");\nconst cancelTaskBtn = $(\".tasks-dialog__cancel-task-btn\");\nconst taskTitle = $(\"#task-title\");\nconst addTaskBtn = $(\".tasks-dialog__add-task-btn\");\n\nconst addDialogAnimations = (dialog, className, ...args) => {\n  const btns = args;\n\n  btns.forEach((element) => {\n    element.addEventListener(\"click\", () => {\n      dialog.classList.toggle(className);\n    });\n  });\n};\n\nconst handleAddProjectDialog = () => {\n  addProjectBtn.addEventListener(\"click\", () => {\n    if (projectName.value) {\n      addProject(projectName.value);\n      projectsDialog.classList.toggle(\"projects-dialog--is-hidden\");\n      cleanInput(projectName);\n      render();\n    }\n  });\n};\n\nconst handleAddTaskDialog = () => {\n  addTaskBtn.addEventListener(\"click\", () => {\n    if (taskTitle.value) {\n      addTask(taskTitle.value);\n      tasksDialog.classList.toggle(\"tasks-dialog--is-hidden\");\n      cleanInput(taskTitle);\n      render();\n    }\n  });\n};\n\nconst handleDialog = () => {\n  addDialogAnimations(\n    projectsDialog,\n    \"projects-dialog--is-hidden\",\n    sidebarAddProjectBtn,\n    cancelProjectBtn,\n  );\n\n  addDialogAnimations(\n    tasksDialog,\n    \"tasks-dialog--is-hidden\",\n    mainAddTaskBtn,\n    cancelTaskBtn,\n  );\n\n  handleAddProjectDialog();\n  handleAddTaskDialog();\n};\n\nexport default handleDialog;\n","import { $, cleanCtn } from \"./utils\";\n\nimport MIL from \"../../assets/icons/chevron-left.svg\";\nimport MIR from \"../../assets/icons/chevron-right.svg\";\n\nconst sidebar = $(\".sidebar\");\nconst handleSidebarBtn = $(\".main__handle-sidebar-btn\");\n\nconst menuIconLeft = new Image();\nconst menuIconRight = new Image();\n\nmenuIconLeft.src = MIL;\nmenuIconRight.src = MIR;\n\nconst updateLayout = () => {\n  if (sidebar.classList.contains(\"sidebar--is-hidden\")) {\n    document.body.style.gridTemplateColumns = \"1fr\";\n    sidebar.style.position = \"absolute\";\n  } else {\n    document.body.style.gridTemplateColumns = \"auto 1fr\";\n    sidebar.removeAttribute(\"style\");\n  }\n};\n\nconst updateIcon = () => {\n  cleanCtn(handleSidebarBtn);\n  handleSidebarBtn.appendChild(\n    sidebar.classList.contains(\"sidebar--is-hidden\")\n      ? menuIconRight\n      : menuIconLeft,\n  );\n};\n\nconst handleSidebar = () => {\n  handleSidebarBtn.addEventListener(\"click\", () => {\n    sidebar.classList.toggle(\"sidebar--is-hidden\");\n    updateIcon();\n    updateLayout();\n  });\n\n  updateIcon();\n  updateLayout();\n};\n\nwindow.matchMedia(\"(max-width: 800px)\").onchange = (media) => {\n  if (media.matches && !sidebar.classList.contains(\"sidebar--is-hidden\")) {\n    sidebar.classList.add(\"sidebar--is-hidden\");\n\n    updateIcon();\n    updateLayout();\n  } else {\n    sidebar.classList.remove(\"sidebar--is-hidden\");\n\n    updateIcon();\n    updateLayout();\n  }\n};\n\nexport default handleSidebar;\n","import \"./base.css\";\n\nimport initial from \"./scripts/initial\";\nimport render from \"./scripts/render\";\nimport handleDates from \"./scripts/handle-dates\";\nimport handleDialog from \"./scripts/handle-dialog\";\nimport handleSidebar from \"./scripts/handle-sidebar\";\n\ninitial();\nrender();\nhandleDates();\nhandleDialog();\nhandleSidebar();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","Project","constructor","name","tasks","isSelected","isDefault","Task","title","complete","toggleComplete","$","querySelector","cleanCtn","ctn","firstChild","removeChild","cleanInput","input","value","createElement","tag","args","el","className","textContent","type","classList","add","item","localStorage","getItem","defaultProject","defaultTask","push","lProjects","JSON","parse","getFromLocalStorage","forEach","projectData","project","taskData","task","actualProjectName","element","sidebarProjects","mainTasks","updateProjectSelection","index","render","createProjectElement","sidebarProjectDiv","sidebarProjectP","sidebarProjectSpan","style","backgroundColor","addEventListener","event","stopPropagation","splice","deleteProject","append","renderTasks","projectIndex","taskIndex","mainTaskDiv","mainTaskInnerDiv","mainTaskCheckComplete","mainTaksTitleP","mainDeleteTaskBtn","checked","deleteTask","opacity","appendChild","setItem","stringify","deleteCompletedBtn","deleteAllBtn","selectedProject","find","filter","deleteCompletedTasks","indexOf","addEventListeners","actualDates","date","Date","dateOptions","weekday","month","day","year","currentDay","toLocaleDateString","currentFullDate","getCurrentDates","projectName","pName","trim","charAt","slice","toLowerCase","formatProjectName","newProject","taskName","priority","newTask","projectsDialog","sidebarAddProjectBtn","cancelProjectBtn","addProjectBtn","tasksDialog","mainAddTaskBtn","cancelTaskBtn","taskTitle","addTaskBtn","addDialogAnimations","dialog","toggle","sidebar","handleSidebarBtn","menuIconLeft","Image","menuIconRight","updateLayout","contains","body","gridTemplateColumns","position","removeAttribute","updateIcon","matchMedia","onchange","media","matches","remove"],"sourceRoot":""}